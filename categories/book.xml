<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bowling For Data (Posts about book)</title><link>https://necromuralist.github.io/Bowling-For-Data/</link><description></description><atom:link href="https://necromuralist.github.io/Bowling-For-Data/categories/book.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2023 &lt;a href="mailto:cloisteredmonkey.jmark@slmail.me"&gt;The Cloistered Monkey&lt;/a&gt; 
 &lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
 &lt;img alt="Creative Commons License BY-NC-SA"
 style="border-width:0; margin-bottom:12px;"
 src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Tue, 27 Jun 2023 19:49:52 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Algorithms Illuminated - Part III: Greedy Algorithms and Dynamic Programming</title><link>https://necromuralist.github.io/Bowling-For-Data/posts/algorithms-illuminated-part-3/index.html</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org163d3e6" class="outline-2"&gt;
&lt;h2 id="org163d3e6"&gt;Citation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org163d3e6"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;[AI3] Roughgarden T. Algorithms illuminated. Part 3: Greedy algorithms and dynamic programming. First edition. San Francisco, CA: Soundlikeyourself Publishing, LLC; 2019. 217 p.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc2adaf3" class="outline-2"&gt;
&lt;h2 id="orgc2adaf3"&gt;On The Web&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc2adaf3"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://algorithmsilluminated.org/"&gt;Algorithms Illuminated website&lt;/a&gt;: Has links to all four books, videos, test cases, etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://timroughgarden.org/"&gt;Tim Roughgarden's (the author) Website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3de2dc3" class="outline-2"&gt;
&lt;h2 id="org3de2dc3"&gt;Other Books in the Series&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3de2dc3"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Bowling-For-Data/posts/algorithms-illuminated-part-1/"&gt;Algorithms Illuminated - Part 1: The Basics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>algorithms</category><category>bibliography</category><category>book</category><guid>https://necromuralist.github.io/Bowling-For-Data/posts/algorithms-illuminated-part-3/index.html</guid><pubDate>Mon, 27 Jun 2022 20:03:04 GMT</pubDate></item><item><title>Algorithms Illuminated - Part 1: The Basics</title><link>https://necromuralist.github.io/Bowling-For-Data/posts/algorithms-illuminated-part-1/index.html</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-orga503d64" class="outline-2"&gt;
&lt;h2 id="orga503d64"&gt;Citation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orga503d64"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Roughgarden T. Algorithms illuminated. Part 1: The Basics. First edition. San Francisco, CA: Soundlikeyourself Publishing; 2021. 213 p.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgee8ac40" class="outline-2"&gt;
&lt;h2 id="orgee8ac40"&gt;On The Web&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgee8ac40"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://algorithmsilluminated.org/"&gt;Algorithms Illuminated website&lt;/a&gt;: Has links to all four books, videos, test cases, etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://timroughgarden.org/"&gt;Tim Roughgarden's (the author) Website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org17162f3" class="outline-2"&gt;
&lt;h2 id="org17162f3"&gt;Other Books in the Series&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org17162f3"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Bowling-For-Data/posts/algorithms-illuminated-part-3/"&gt;Algorithms Illuminated - Part III: Greedy Algorithms and Dynamic Programming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>algorithms</category><category>bibliography</category><category>book</category><guid>https://necromuralist.github.io/Bowling-For-Data/posts/algorithms-illuminated-part-1/index.html</guid><pubDate>Tue, 10 May 2022 22:03:11 GMT</pubDate></item><item><title>R For Data Science</title><link>https://necromuralist.github.io/Bowling-For-Data/posts/r-for-data-science/index.html</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org94f743a" class="outline-2"&gt;
&lt;h2 id="org94f743a"&gt;Table Of Contents&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org94f743a"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Preface&lt;/li&gt;
&lt;li&gt;Explore
&lt;ul class="org-ul"&gt;
&lt;li&gt;Data Visualization with GGPlot2&lt;/li&gt;
&lt;li&gt;Workflow: Basics&lt;/li&gt;
&lt;li&gt;Data Transformation With DPlyr&lt;/li&gt;
&lt;li&gt;Workflow: Scripts&lt;/li&gt;
&lt;li&gt;Exploratory Data Analysis&lt;/li&gt;
&lt;li&gt;Workflow: Projects&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Wrangle
&lt;ul class="org-ul"&gt;
&lt;li&gt;Tibbles With Tibble&lt;/li&gt;
&lt;li&gt;Data Import With Readr&lt;/li&gt;
&lt;li&gt;Tidy Data With Tidyr&lt;/li&gt;
&lt;li&gt;Relational Data With Dplyr&lt;/li&gt;
&lt;li&gt;Strings With Stringr&lt;/li&gt;
&lt;li&gt;Factors With Forcats&lt;/li&gt;
&lt;li&gt;Dates and Times With Lubridate&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Program
&lt;ul class="org-ul"&gt;
&lt;li&gt;Pipes With Magrittr&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;Vectors&lt;/li&gt;
&lt;li&gt;Iterations With Purrr&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Model
&lt;ul class="org-ul"&gt;
&lt;li&gt;Model Basics With Modelr&lt;/li&gt;
&lt;li&gt;Model Building&lt;/li&gt;
&lt;li&gt;Many Models With Purrr and Broom&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Communicate
&lt;ul class="org-ul"&gt;
&lt;li&gt;R Markdown&lt;/li&gt;
&lt;li&gt;Graphics For Communication With GGPlot2&lt;/li&gt;
&lt;li&gt;R Markdown Formats&lt;/li&gt;
&lt;li&gt;R Markdown Workflow&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgec5e066" class="outline-2"&gt;
&lt;h2 id="orgec5e066"&gt;Links&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgec5e066"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Online Version: &lt;a href="https://r4ds.had.co.nz/"&gt;https://r4ds.had.co.nz/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github Source (for the book, written in R Markdown): &lt;a href="https://github.com/hadley/r4ds/blob/main/index.Rmd"&gt;https://github.com/hadley/r4ds/blob/main/index.Rmd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5696acc" class="outline-2"&gt;
&lt;h2 id="org5696acc"&gt;Citation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org5696acc"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;[RFDS] Wickham H, Grolemund G. R for data science: import, tidy, transform, visualize, and model data. First edition. Sebastopol, CA: O’Reilly; 2016. 492 p.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>bibliography</category><category>book</category><category>citation</category><category>data science</category><category>r</category><guid>https://necromuralist.github.io/Bowling-For-Data/posts/r-for-data-science/index.html</guid><pubDate>Wed, 15 Dec 2021 00:10:01 GMT</pubDate></item><item><title>How To Think About Algorithms</title><link>https://necromuralist.github.io/Bowling-For-Data/posts/HTTAA/index.html</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org76c468c" class="outline-2"&gt;
&lt;h2 id="org76c468c"&gt;Contents&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org76c468c"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id="outline-container-org69c6d09" class="outline-3"&gt;
&lt;h3 id="org69c6d09"&gt;Part One: Iterative Algorithms and Loop Invariants&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org69c6d09"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Iterative Algorithms: Measures of Progress and Loop Invariants&lt;/li&gt;
&lt;li&gt;Examples Using More-of-the-Input Loop Invariants&lt;/li&gt;
&lt;li&gt;Abstract Data Types&lt;/li&gt;
&lt;li&gt;Narrowing the Search Space: Binary Search&lt;/li&gt;
&lt;li&gt;Iterative Sorting Algorithms&lt;/li&gt;
&lt;li&gt;Euclid's GCD Algorithm&lt;/li&gt;
&lt;li&gt;The Loop Invariant for Lower Bounds&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2c4e18a" class="outline-3"&gt;
&lt;h3 id="org2c4e18a"&gt;Part Two: Recursion&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org2c4e18a"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Abstractions, Technique, and Theory&lt;/li&gt;
&lt;li&gt;Some Simple Examples of Recursive Algorithms&lt;/li&gt;
&lt;li&gt;Recursion on Trees&lt;/li&gt;
&lt;li&gt;Recursive Images&lt;/li&gt;
&lt;li&gt;Parsing with Context-Free Grammars&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfc6d255" class="outline-3"&gt;
&lt;h3 id="orgfc6d255"&gt;Part Three: Optimization Problems&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgfc6d255"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Definition of Optimization Problems&lt;/li&gt;
&lt;li&gt;Graph Search Algorithms&lt;/li&gt;
&lt;li&gt;Network Flows and Linear Programming&lt;/li&gt;
&lt;li&gt;Greedy Algorithms&lt;/li&gt;
&lt;li&gt;Recursive Backtracking&lt;/li&gt;
&lt;li&gt;Dynamic Programming Algorithms&lt;/li&gt;
&lt;li&gt;Examples of Dynamic Programming&lt;/li&gt;
&lt;li&gt;Reductions and NP-Completeness&lt;/li&gt;
&lt;li&gt;Randomized Algorithms&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge55e58b" class="outline-3"&gt;
&lt;h3 id="orge55e58b"&gt;Part Four: Appendix&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orge55e58b"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Existential and Universal Quantifiers&lt;/li&gt;
&lt;li&gt;Time Complexity&lt;/li&gt;
&lt;li&gt;Logarithms and Exponentials&lt;/li&gt;
&lt;li&gt;Asymptotic Growth&lt;/li&gt;
&lt;li&gt;Adding-Made-Easy Approximations&lt;/li&gt;
&lt;li&gt;Recurrence Relations&lt;/li&gt;
&lt;li&gt;A Formal Proof of Correctness&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5ef307e" class="outline-3"&gt;
&lt;h3 id="org5ef307e"&gt;Part Five: Exercise Solutions&lt;/h3&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0a7d5fe" class="outline-3"&gt;
&lt;h3 id="org0a7d5fe"&gt;Conclusion&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org79f4656" class="outline-2"&gt;
&lt;h2 id="org79f4656"&gt;Citation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org79f4656"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;[HTTAA] Edmonds J. How to think about algorithms. Cambridge ; New York: Cambridge University Press; 2008. 448 p.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>algorithms</category><category>bibliography</category><category>book</category><guid>https://necromuralist.github.io/Bowling-For-Data/posts/HTTAA/index.html</guid><pubDate>Thu, 21 Oct 2021 21:19:32 GMT</pubDate></item><item><title>Introduction to the Design &amp; Analysis of Algorithms (Levitin)</title><link>https://necromuralist.github.io/Bowling-For-Data/posts/itdaa/index.html</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;p&gt;
Levitin A. 2007. Introduction to the design &amp;amp; analysis of algorithms. 2nd ed. Boston: Pearson Addison-Wesley.
&lt;/p&gt;

&lt;div id="outline-container-orge94e011" class="outline-2"&gt;
&lt;h2 id="orge94e011"&gt;Main Chapters&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orge94e011"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Fundamentals of the Analysis of Algorithm Efficiency&lt;/li&gt;
&lt;li&gt;Brute Force&lt;/li&gt;
&lt;li&gt;Divide-and-Conquer&lt;/li&gt;
&lt;li&gt;Decrease-and-Conquer&lt;/li&gt;
&lt;li&gt;Transform-and-Conquer&lt;/li&gt;
&lt;li&gt;Space and Time Tradeoffs&lt;/li&gt;
&lt;li&gt;Dynamic Programming&lt;/li&gt;
&lt;li&gt;Greedy Technique&lt;/li&gt;
&lt;li&gt;Iterative Improvement&lt;/li&gt;
&lt;li&gt;Limitations of Algorithm Power&lt;/li&gt;
&lt;li&gt;Coping with the Limitations of Algorithm Power&lt;/li&gt;
&lt;li&gt;Useful Formulas for the Analysis of Algorithms&lt;/li&gt;
&lt;li&gt;Short Tutorial on Recurrence Relations&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>algorithms</category><category>bibliography</category><category>book</category><category>citation</category><guid>https://necromuralist.github.io/Bowling-For-Data/posts/itdaa/index.html</guid><pubDate>Wed, 20 Oct 2021 23:24:56 GMT</pubDate></item><item><title>Essential Algorithms</title><link>https://necromuralist.github.io/Bowling-For-Data/posts/essential-algorithms/index.html</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org687fd25" class="outline-2"&gt;
&lt;h2 id="org687fd25"&gt;Citation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org687fd25"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Stephens R. Essential algorithms: a practical approach to computer algorithms using Python and C#. 2nd ed. Indianapolis: John Wiley; 2019.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>algorithms</category><category>bibliography</category><category>book</category><guid>https://necromuralist.github.io/Bowling-For-Data/posts/essential-algorithms/index.html</guid><pubDate>Thu, 12 Aug 2021 19:39:58 GMT</pubDate></item><item><title>Introduction To Algorithms (CLRS)</title><link>https://necromuralist.github.io/Bowling-For-Data/posts/clrs/index.html</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org2513c48" class="outline-2"&gt;
&lt;h2 id="org2513c48"&gt;Chapters&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org2513c48"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc0d41ea" class="outline-3"&gt;
&lt;h3 id="orgc0d41ea"&gt;Foundations&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc0d41ea"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5539533" class="outline-4"&gt;
&lt;h4 id="org5539533"&gt;The Role of Algorithms in Computing&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org5539533"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Algorithms&lt;/li&gt;
&lt;li&gt;Algorithms as a technology&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org146cd1a" class="outline-4"&gt;
&lt;h4 id="org146cd1a"&gt;Getting Started&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org146cd1a"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Insertion Sort&lt;/li&gt;
&lt;li&gt;Analyzing algorithms&lt;/li&gt;
&lt;li&gt;Designing algorithms&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga9642b9" class="outline-4"&gt;
&lt;h4 id="orga9642b9"&gt;Growth of Functions&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orga9642b9"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Asymptotic notation&lt;/li&gt;
&lt;li&gt;Standard notations and common functions&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org35125fa" class="outline-4"&gt;
&lt;h4 id="org35125fa"&gt;Divide-and-Conquer&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org35125fa"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;The maximum-subarray problem&lt;/li&gt;
&lt;li&gt;Strassen's algorithm for matrix multiplication&lt;/li&gt;
&lt;li&gt;The substitution method for solving recurrences&lt;/li&gt;
&lt;li&gt;The recursion-tree method for solving recurrences&lt;/li&gt;
&lt;li&gt;The master method for solving recurrences&lt;/li&gt;
&lt;li&gt;Proof of the master theorem&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2b67f20" class="outline-4"&gt;
&lt;h4 id="org2b67f20"&gt;Probabilistic Analysis and Randomization Algorithms&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org2b67f20"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;The hiring problem&lt;/li&gt;
&lt;li&gt;Indicator Random Variables&lt;/li&gt;
&lt;li&gt;Randomized Algorithms&lt;/li&gt;
&lt;li&gt;Probabilistic analysis and further uses of indicator random variables&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc79f9a4" class="outline-3"&gt;
&lt;h3 id="orgc79f9a4"&gt;Sorting and Order Statistics&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc79f9a4"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9b25b37" class="outline-4"&gt;
&lt;h4 id="org9b25b37"&gt;Heapsort&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org9b25b37"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Heaps&lt;/li&gt;
&lt;li&gt;Maintaining the heap property&lt;/li&gt;
&lt;li&gt;Building a heap&lt;/li&gt;
&lt;li&gt;The heapsort algorithm&lt;/li&gt;
&lt;li&gt;Priority queues&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfed7df2" class="outline-4"&gt;
&lt;h4 id="orgfed7df2"&gt;Quicksort&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgfed7df2"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Description of quicksort&lt;/li&gt;
&lt;li&gt;Performance of quicksort&lt;/li&gt;
&lt;li&gt;A randomized version of quicksort&lt;/li&gt;
&lt;li&gt;Analysis of quicksort&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org184b9d8" class="outline-4"&gt;
&lt;h4 id="org184b9d8"&gt;Sorting in Linear Time&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org184b9d8"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Lower bounds for sorting&lt;/li&gt;
&lt;li&gt;Counting sort&lt;/li&gt;
&lt;li&gt;Radix sort&lt;/li&gt;
&lt;li&gt;Bucket sort&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3afa9f0" class="outline-4"&gt;
&lt;h4 id="org3afa9f0"&gt;Medians and Order Statistics&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org3afa9f0"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Minimum and maximum&lt;/li&gt;
&lt;li&gt;Selection in expected linear time&lt;/li&gt;
&lt;li&gt;Selection in worst-case linear time&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0d58602" class="outline-3"&gt;
&lt;h3 id="org0d58602"&gt;Data Structures&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0d58602"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2c0e847" class="outline-4"&gt;
&lt;h4 id="org2c0e847"&gt;Elementary Data Structures&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org2c0e847"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Stacks and Queues&lt;/li&gt;
&lt;li&gt;Linked Lists&lt;/li&gt;
&lt;li&gt;Implementing pointers and objects&lt;/li&gt;
&lt;li&gt;Representing rooted trees&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgaa784d2" class="outline-4"&gt;
&lt;h4 id="orgaa784d2"&gt;Hash Tables&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgaa784d2"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Direct-address tables&lt;/li&gt;
&lt;li&gt;Hash tables&lt;/li&gt;
&lt;li&gt;Hash functions&lt;/li&gt;
&lt;li&gt;Open addressing&lt;/li&gt;
&lt;li&gt;Perfect hashing&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org792ec24" class="outline-4"&gt;
&lt;h4 id="org792ec24"&gt;Binary Search Trees&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org792ec24"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;What is a binary search tree?&lt;/li&gt;
&lt;li&gt;Querying a binary search tree&lt;/li&gt;
&lt;li&gt;Insertion and deletion&lt;/li&gt;
&lt;li&gt;Randomly built binary search trees&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org51107ce" class="outline-4"&gt;
&lt;h4 id="org51107ce"&gt;Red-Black Trees&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org51107ce"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Properties of red-black trees&lt;/li&gt;
&lt;li&gt;Rotations&lt;/li&gt;
&lt;li&gt;Insertion&lt;/li&gt;
&lt;li&gt;Deletion&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org76396c2" class="outline-4"&gt;
&lt;h4 id="org76396c2"&gt;Augmenting Data Structures&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org76396c2"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Dynamic order statistics&lt;/li&gt;
&lt;li&gt;How to augment a ddata structure&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org86ba6ad" class="outline-3"&gt;
&lt;h3 id="org86ba6ad"&gt;Advanced Design and Analysis Techniques&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org86ba6ad"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc30480d" class="outline-4"&gt;
&lt;h4 id="orgc30480d"&gt;Dynamic Programming&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgc30480d"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Rod cutting&lt;/li&gt;
&lt;li&gt;Matrix-chain multiplication&lt;/li&gt;
&lt;li&gt;Elements of dynamic programming&lt;/li&gt;
&lt;li&gt;Longest common subsequence&lt;/li&gt;
&lt;li&gt;Optimal binary search trees&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org66f6837" class="outline-4"&gt;
&lt;h4 id="org66f6837"&gt;Greedy Algorithms&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org66f6837"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;An activity-selection problem&lt;/li&gt;
&lt;li&gt;Elements of the greedy strategy&lt;/li&gt;
&lt;li&gt;Huffman codes&lt;/li&gt;
&lt;li&gt;Matroids and greedy methods&lt;/li&gt;
&lt;li&gt;A task-scheduling problem as a matroid&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3d6cf4b" class="outline-4"&gt;
&lt;h4 id="org3d6cf4b"&gt;Amortized Analysis&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org3d6cf4b"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Aggregate analysis&lt;/li&gt;
&lt;li&gt;The accounting method&lt;/li&gt;
&lt;li&gt;The potential method&lt;/li&gt;
&lt;li&gt;Dynamic tables&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org68b5d71" class="outline-3"&gt;
&lt;h3 id="org68b5d71"&gt;Advanced Data Structures&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org68b5d71"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org86be9a8" class="outline-4"&gt;
&lt;h4 id="org86be9a8"&gt;B-Trees&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org86be9a8"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Definition of B-trees&lt;/li&gt;
&lt;li&gt;Basic operations on B-trees&lt;/li&gt;
&lt;li&gt;Deleting a key from a B-tree&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7f93726" class="outline-4"&gt;
&lt;h4 id="org7f93726"&gt;Fibonacci Heaps&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org7f93726"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Structure of Fibonacci heaps&lt;/li&gt;
&lt;li&gt;Mergeable-heap operations&lt;/li&gt;
&lt;li&gt;Decreasing a key and deleting a node&lt;/li&gt;
&lt;li&gt;Bounding the maximum degree&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3aacf81" class="outline-4"&gt;
&lt;h4 id="org3aacf81"&gt;van Emde Boas Trees&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org3aacf81"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Preliminary approaches&lt;/li&gt;
&lt;li&gt;A recursive structure&lt;/li&gt;
&lt;li&gt;The van Emde Boas Tree&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org58a9711" class="outline-4"&gt;
&lt;h4 id="org58a9711"&gt;Data Structures for Disjoint Sets&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org58a9711"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Disjoint-set operations&lt;/li&gt;
&lt;li&gt;Linked-list representations of disjoint sets&lt;/li&gt;
&lt;li&gt;Disjoint-set forests&lt;/li&gt;
&lt;li&gt;Analysis of uninon by rank with path compression&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9911fd7" class="outline-3"&gt;
&lt;h3 id="org9911fd7"&gt;Graph Algorithms&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org9911fd7"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge356bcf" class="outline-4"&gt;
&lt;h4 id="orge356bcf"&gt;Elementary Graph Algorithms&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orge356bcf"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Representations of graphs&lt;/li&gt;
&lt;li&gt;Breadth-first search&lt;/li&gt;
&lt;li&gt;Depth-first search&lt;/li&gt;
&lt;li&gt;Topological sort&lt;/li&gt;
&lt;li&gt;Strongly connected components&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgcdd13b8" class="outline-4"&gt;
&lt;h4 id="orgcdd13b8"&gt;Minimum Spanning Trees&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgcdd13b8"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Growing a minimum spanning tree&lt;/li&gt;
&lt;li&gt;The algorithms of Kruskal and Prim&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5c2faff" class="outline-4"&gt;
&lt;h4 id="org5c2faff"&gt;Single-Source Shortest Paths&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org5c2faff"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;The Bellman-Ford algorithm&lt;/li&gt;
&lt;li&gt;Single-source shortest paths in directed acyclic graphs&lt;/li&gt;
&lt;li&gt;Dijkstra's algorithm&lt;/li&gt;
&lt;li&gt;Difference constraints and shortest paths&lt;/li&gt;
&lt;li&gt;Proofs of shortest-paths properties&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0b745af" class="outline-4"&gt;
&lt;h4 id="org0b745af"&gt;All-Pairs Shortest Paths&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org0b745af"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Shortest paths and matrix multiplication&lt;/li&gt;
&lt;li&gt;The Floyd-Warshall algorithm&lt;/li&gt;
&lt;li&gt;Johnson's algorithm for sparse graphs&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb95e2a2" class="outline-4"&gt;
&lt;h4 id="orgb95e2a2"&gt;Maximum Flow&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgb95e2a2"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Flow networks&lt;/li&gt;
&lt;li&gt;The Ford-Fulkerson method&lt;/li&gt;
&lt;li&gt;Maximum bipartite matching&lt;/li&gt;
&lt;li&gt;Push-relabel algorithms&lt;/li&gt;
&lt;li&gt;The relabel-to-front algorithm&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org886cc3a" class="outline-3"&gt;
&lt;h3 id="org886cc3a"&gt;Selected Topics&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org886cc3a"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc9759ee" class="outline-4"&gt;
&lt;h4 id="orgc9759ee"&gt;Multithreaded Algorithms&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgc9759ee"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;The basics of dynamic multithreading&lt;/li&gt;
&lt;li&gt;Multithreaded matrix multiplication&lt;/li&gt;
&lt;li&gt;Multithreaded merge sort&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0a72bee" class="outline-4"&gt;
&lt;h4 id="org0a72bee"&gt;Matrix Operations&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org0a72bee"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Solving systems of linear equations&lt;/li&gt;
&lt;li&gt;Inverting matrices&lt;/li&gt;
&lt;li&gt;Symmetric positive-definite matrices and least-squares approximation&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7a3c1e7" class="outline-4"&gt;
&lt;h4 id="org7a3c1e7"&gt;Linear Programming&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org7a3c1e7"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Standard and slack forms&lt;/li&gt;
&lt;li&gt;Formulating problems as linear programs&lt;/li&gt;
&lt;li&gt;The simplex algorithm&lt;/li&gt;
&lt;li&gt;Duality&lt;/li&gt;
&lt;li&gt;The initial basic feasible solution&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf7fc0a3" class="outline-4"&gt;
&lt;h4 id="orgf7fc0a3"&gt;Polynomials and the FFT&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgf7fc0a3"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Representing polynomials&lt;/li&gt;
&lt;li&gt;The DFT and FFT&lt;/li&gt;
&lt;li&gt;Efficient FFT Implementations&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org506b498" class="outline-4"&gt;
&lt;h4 id="org506b498"&gt;Number-Theoretic Algorithms&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org506b498"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Elementary number-theoretic notions&lt;/li&gt;
&lt;li&gt;Greatest common divisor&lt;/li&gt;
&lt;li&gt;Modular arithmetic&lt;/li&gt;
&lt;li&gt;Solving modular linear equations&lt;/li&gt;
&lt;li&gt;The Chinese remainder theorem&lt;/li&gt;
&lt;li&gt;Powers of an element&lt;/li&gt;
&lt;li&gt;The RSA public-key cryptosystem&lt;/li&gt;
&lt;li&gt;Primality testing&lt;/li&gt;
&lt;li&gt;Integer factorization&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org52edcda" class="outline-4"&gt;
&lt;h4 id="org52edcda"&gt;String Matching&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org52edcda"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;The naive string-matching algorithm&lt;/li&gt;
&lt;li&gt;The Rabin-Karp algorithm&lt;/li&gt;
&lt;li&gt;String matching with finite automata&lt;/li&gt;
&lt;li&gt;The Knuth-Morris-Pratt algorithm&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3a4c1ce" class="outline-4"&gt;
&lt;h4 id="org3a4c1ce"&gt;Computational Geometry&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org3a4c1ce"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Line-segment properties&lt;/li&gt;
&lt;li&gt;Determining whether any pair of segments intersects&lt;/li&gt;
&lt;li&gt;Finding the convex hull&lt;/li&gt;
&lt;li&gt;Finding the closest pair of points&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org818fa8e" class="outline-4"&gt;
&lt;h4 id="org818fa8e"&gt;NP-Completeness&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org818fa8e"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Polynomial time&lt;/li&gt;
&lt;li&gt;Polynomial-time verification&lt;/li&gt;
&lt;li&gt;NP-completeness and reducibility&lt;/li&gt;
&lt;li&gt;NP-completeness proofs&lt;/li&gt;
&lt;li&gt;NP-complete problems&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1d35598" class="outline-4"&gt;
&lt;h4 id="org1d35598"&gt;Approximation Algorithms&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org1d35598"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;The vertex-coverc problem&lt;/li&gt;
&lt;li&gt;The traveling-salesman problem&lt;/li&gt;
&lt;li&gt;The set-covering problem&lt;/li&gt;
&lt;li&gt;Randomization and linear programming&lt;/li&gt;
&lt;li&gt;The subset-sum problem&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9c41b7a" class="outline-3"&gt;
&lt;h3 id="org9c41b7a"&gt;Appendix: Mathematical Background&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org9c41b7a"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2374835" class="outline-4"&gt;
&lt;h4 id="org2374835"&gt;Summations&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org2374835"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Summation formulas and properties&lt;/li&gt;
&lt;li&gt;Bounding summations&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3c606d3" class="outline-4"&gt;
&lt;h4 id="org3c606d3"&gt;Sets, Etc.&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org3c606d3"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Sets&lt;/li&gt;
&lt;li&gt;Relations&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;Graphs&lt;/li&gt;
&lt;li&gt;Trees&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgaafca96" class="outline-4"&gt;
&lt;h4 id="orgaafca96"&gt;Counting and Probability&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgaafca96"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Counting&lt;/li&gt;
&lt;li&gt;Probability&lt;/li&gt;
&lt;li&gt;Discrcete random variables&lt;/li&gt;
&lt;li&gt;The geometric and binomial distributions&lt;/li&gt;
&lt;li&gt;The tails of the binomial distribution&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc790a21" class="outline-4"&gt;
&lt;h4 id="orgc790a21"&gt;Matrices&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgc790a21"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Matrices and matrix operations&lt;/li&gt;
&lt;li&gt;Basic matrix properties&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd66f89c" class="outline-2"&gt;
&lt;h2 id="orgd66f89c"&gt;Citation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd66f89c"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Cormen TH, editor. Introduction to algorithms. 3rd ed. Cambridge, Mass: MIT Press; 2009. 1292 p.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>algorithms</category><category>bibliography</category><category>book</category><guid>https://necromuralist.github.io/Bowling-For-Data/posts/clrs/index.html</guid><pubDate>Thu, 12 Aug 2021 19:39:58 GMT</pubDate></item></channel></rss>