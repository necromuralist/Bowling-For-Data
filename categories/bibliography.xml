<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bowling For Data (Posts about bibliography)</title><link>https://necromuralist.github.io/Bowling-For-Data/</link><description></description><atom:link href="https://necromuralist.github.io/Bowling-For-Data/categories/bibliography.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2022 &lt;a href="mailto:cloisteredmonkey.jmark@slmail.me"&gt;The Cloistered Monkey&lt;/a&gt; 
 &lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
 &lt;img alt="Creative Commons License BY-NC-SA"
 style="border-width:0; margin-bottom:12px;"
 src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Wed, 20 Jul 2022 23:20:05 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Algorithms Illuminated - Part III: Greedy Algorithms and Dynamic Programming</title><link>https://necromuralist.github.io/Bowling-For-Data/posts/algorithms-illuminated-part-3/</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org62cd10e" class="outline-2"&gt;
&lt;h2 id="org62cd10e"&gt;Citation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org62cd10e"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;[AI3] Roughgarden T. Algorithms illuminated. Part 3: Greedy algorithms and dynamic programming. First edition. San Francisco, CA: Soundlikeyourself Publishing, LLC; 2019. 217 p.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org276ef67" class="outline-2"&gt;
&lt;h2 id="org276ef67"&gt;On The Web&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org276ef67"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://algorithmsilluminated.org/"&gt;Algorithms Illuminated website&lt;/a&gt;: Has links to all four books, videos, test cases, etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://timroughgarden.org/"&gt;Tim Roughgarden's (the author) Website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org538c594" class="outline-2"&gt;
&lt;h2 id="org538c594"&gt;Other Books in the Series&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org538c594"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Bowling-For-Data/posts/algorithms-illuminated-part-1/"&gt;Algorithms Illuminated - Part 1: The Basics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>algorithms</category><category>bibliography</category><category>book</category><guid>https://necromuralist.github.io/Bowling-For-Data/posts/algorithms-illuminated-part-3/</guid><pubDate>Mon, 27 Jun 2022 20:03:04 GMT</pubDate></item><item><title>Algorithms Illuminated - Part 1: The Basics</title><link>https://necromuralist.github.io/Bowling-For-Data/posts/algorithms-illuminated-part-1/</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-orgafdbcf8" class="outline-2"&gt;
&lt;h2 id="orgafdbcf8"&gt;Citation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgafdbcf8"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Roughgarden T. Algorithms illuminated. Part 1: The Basics. First edition. San Francisco, CA: Soundlikeyourself Publishing; 2021. 213 p.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgab590d8" class="outline-2"&gt;
&lt;h2 id="orgab590d8"&gt;On The Web&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgab590d8"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://algorithmsilluminated.org/"&gt;Algorithms Illuminated website&lt;/a&gt;: Has links to all four books, videos, test cases, etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://timroughgarden.org/"&gt;Tim Roughgarden's (the author) Website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb66cb6e" class="outline-2"&gt;
&lt;h2 id="orgb66cb6e"&gt;Other Books in the Series&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb66cb6e"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Bowling-For-Data/posts/algorithms-illuminated-part-3/"&gt;Algorithms Illuminated - Part III: Greedy Algorithms and Dynamic Programming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>algorithms</category><category>bibliography</category><category>book</category><guid>https://necromuralist.github.io/Bowling-For-Data/posts/algorithms-illuminated-part-1/</guid><pubDate>Tue, 10 May 2022 22:03:11 GMT</pubDate></item><item><title>Sources</title><link>https://necromuralist.github.io/Bowling-For-Data/posts/sources/</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org0a2b099" class="outline-2"&gt;
&lt;h2 id="org0a2b099"&gt;Algorithms&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org0a2b099"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Bowling-For-Data/posts/clrs/"&gt;Introduction To Algorithms (CLRS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Bowling-For-Data/posts/itdaa/"&gt;Introduction to the Design &amp;amp; Analysis of Algorithms (Levitin)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Bowling-For-Data/posts/HTTAA/"&gt;How To Think About Algorithms&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>bibliography</category><category>index</category><category>source</category><guid>https://necromuralist.github.io/Bowling-For-Data/posts/sources/</guid><pubDate>Fri, 04 Mar 2022 02:29:30 GMT</pubDate></item><item><title>R For Data Science</title><link>https://necromuralist.github.io/Bowling-For-Data/posts/r-for-data-science/</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-orgc57b7ff" class="outline-2"&gt;
&lt;h2 id="orgc57b7ff"&gt;Table Of Contents&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc57b7ff"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Preface&lt;/li&gt;
&lt;li&gt;Explore
&lt;ul class="org-ul"&gt;
&lt;li&gt;Data Visualization with GGPlot2&lt;/li&gt;
&lt;li&gt;Workflow: Basics&lt;/li&gt;
&lt;li&gt;Data Transformation With DPlyr&lt;/li&gt;
&lt;li&gt;Workflow: Scripts&lt;/li&gt;
&lt;li&gt;Exploratory Data Analysis&lt;/li&gt;
&lt;li&gt;Workflow: Projects&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Wrangle
&lt;ul class="org-ul"&gt;
&lt;li&gt;Tibbles With Tibble&lt;/li&gt;
&lt;li&gt;Data Import With Readr&lt;/li&gt;
&lt;li&gt;Tidy Data With Tidyr&lt;/li&gt;
&lt;li&gt;Relational Data With Dplyr&lt;/li&gt;
&lt;li&gt;Strings With Stringr&lt;/li&gt;
&lt;li&gt;Factors With Forcats&lt;/li&gt;
&lt;li&gt;Dates and Times With Lubridate&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Program
&lt;ul class="org-ul"&gt;
&lt;li&gt;Pipes With Magrittr&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;Vectors&lt;/li&gt;
&lt;li&gt;Iterations With Purrr&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Model
&lt;ul class="org-ul"&gt;
&lt;li&gt;Model Basics With Modelr&lt;/li&gt;
&lt;li&gt;Model Building&lt;/li&gt;
&lt;li&gt;Many Models With Purrr and Broom&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Communicate
&lt;ul class="org-ul"&gt;
&lt;li&gt;R Markdown&lt;/li&gt;
&lt;li&gt;Graphics For Communication With GGPlot2&lt;/li&gt;
&lt;li&gt;R Markdown Formats&lt;/li&gt;
&lt;li&gt;R Markdown Workflow&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3f6ebfb" class="outline-2"&gt;
&lt;h2 id="org3f6ebfb"&gt;Links&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3f6ebfb"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Online Version: &lt;a href="https://r4ds.had.co.nz/"&gt;https://r4ds.had.co.nz/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github Source (for the book, written in R Markdown): &lt;a href="https://github.com/hadley/r4ds/blob/main/index.Rmd"&gt;https://github.com/hadley/r4ds/blob/main/index.Rmd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb38ffb9" class="outline-2"&gt;
&lt;h2 id="orgb38ffb9"&gt;Citation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb38ffb9"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;[RFDS] Wickham H, Grolemund G. R for data science: import, tidy, transform, visualize, and model data. First edition. Sebastopol, CA: O’Reilly; 2016. 492 p.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>bibliography</category><category>book</category><category>citation</category><category>data science</category><category>r</category><guid>https://necromuralist.github.io/Bowling-For-Data/posts/r-for-data-science/</guid><pubDate>Wed, 15 Dec 2021 00:10:01 GMT</pubDate></item><item><title>Bubble Sort: An Archeological Algorithmic Analysis</title><link>https://necromuralist.github.io/Bowling-For-Data/posts/bubble-sort-an-archeological-algorithmic-analysis/</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org965b034" class="outline-2"&gt;
&lt;h2 id="org965b034"&gt;Source&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org965b034"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://users.cs.duke.edu/~ola/bubble/bubble.html"&gt;HTML Version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://users.cs.duke.edu/~ola/papers/bubble.pdf"&gt;Link to PDF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org39f7ba4" class="outline-2"&gt;
&lt;h2 id="org39f7ba4"&gt;Citation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org39f7ba4"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Astrachan O. Bubble sort: an archaeological algorithmic analysis. SIGCSE Bull. 2003 Jan 11;35(1):1–5.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>algorithms</category><category>article</category><category>bibliography</category><category>sorting</category><guid>https://necromuralist.github.io/Bowling-For-Data/posts/bubble-sort-an-archeological-algorithmic-analysis/</guid><pubDate>Fri, 26 Nov 2021 00:38:05 GMT</pubDate></item><item><title>How To Think About Algorithms</title><link>https://necromuralist.github.io/Bowling-For-Data/posts/HTTAA/</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org0e7ec6e" class="outline-2"&gt;
&lt;h2 id="org0e7ec6e"&gt;Contents&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org0e7ec6e"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfdc8e38" class="outline-3"&gt;
&lt;h3 id="orgfdc8e38"&gt;Part One: Iterative Algorithms and Loop Invariants&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgfdc8e38"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Iterative Algorithms: Measures of Progress and Loop Invariants&lt;/li&gt;
&lt;li&gt;Examples Using More-of-the-Input Loop Invariants&lt;/li&gt;
&lt;li&gt;Abstract Data Types&lt;/li&gt;
&lt;li&gt;Narrowing the Search Space: Binary Search&lt;/li&gt;
&lt;li&gt;Iterative Sorting Algorithms&lt;/li&gt;
&lt;li&gt;Euclid's GCD Algorithm&lt;/li&gt;
&lt;li&gt;The Loop Invariant for Lower Bounds&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf94ba8d" class="outline-3"&gt;
&lt;h3 id="orgf94ba8d"&gt;Part Two: Recursion&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgf94ba8d"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Abstractions, Technique, and Theory&lt;/li&gt;
&lt;li&gt;Some Simple Examples of Recursive Algorithms&lt;/li&gt;
&lt;li&gt;Recursion on Trees&lt;/li&gt;
&lt;li&gt;Recursive Images&lt;/li&gt;
&lt;li&gt;Parsing with Context-Free Grammars&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd244f00" class="outline-3"&gt;
&lt;h3 id="orgd244f00"&gt;Part Three: Optimization Problems&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgd244f00"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Definition of Optimization Problems&lt;/li&gt;
&lt;li&gt;Graph Search Algorithms&lt;/li&gt;
&lt;li&gt;Network Flows and Linear Programming&lt;/li&gt;
&lt;li&gt;Greedy Algorithms&lt;/li&gt;
&lt;li&gt;Recursive Backtracking&lt;/li&gt;
&lt;li&gt;Dynamic Programming Algorithms&lt;/li&gt;
&lt;li&gt;Examples of Dynamic Programming&lt;/li&gt;
&lt;li&gt;Reductions and NP-Completeness&lt;/li&gt;
&lt;li&gt;Randomized Algorithms&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7add878" class="outline-3"&gt;
&lt;h3 id="org7add878"&gt;Part Four: Appendix&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org7add878"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Existential and Universal Quantifiers&lt;/li&gt;
&lt;li&gt;Time Complexity&lt;/li&gt;
&lt;li&gt;Logarithms and Exponentials&lt;/li&gt;
&lt;li&gt;Asymptotic Growth&lt;/li&gt;
&lt;li&gt;Adding-Made-Easy Approximations&lt;/li&gt;
&lt;li&gt;Recurrence Relations&lt;/li&gt;
&lt;li&gt;A Formal Proof of Correctness&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgde69fee" class="outline-3"&gt;
&lt;h3 id="orgde69fee"&gt;Part Five: Exercise Solutions&lt;/h3&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1446300" class="outline-3"&gt;
&lt;h3 id="org1446300"&gt;Conclusion&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgebc05c6" class="outline-2"&gt;
&lt;h2 id="orgebc05c6"&gt;Citation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgebc05c6"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;[HTTAA] Edmonds J. How to think about algorithms. Cambridge ; New York: Cambridge University Press; 2008. 448 p.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>algorithms</category><category>bibliography</category><category>book</category><guid>https://necromuralist.github.io/Bowling-For-Data/posts/HTTAA/</guid><pubDate>Thu, 21 Oct 2021 21:19:32 GMT</pubDate></item><item><title>Introduction to the Design &amp; Analysis of Algorithms (Levitin)</title><link>https://necromuralist.github.io/Bowling-For-Data/posts/itdaa/</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;p&gt;
Levitin A. 2007. Introduction to the design &amp;amp; analysis of algorithms. 2nd ed. Boston: Pearson Addison-Wesley.
&lt;/p&gt;

&lt;div id="outline-container-orgc4d4e97" class="outline-2"&gt;
&lt;h2 id="orgc4d4e97"&gt;Main Chapters&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc4d4e97"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Fundamentals of the Analysis of Algorithm Efficiency&lt;/li&gt;
&lt;li&gt;Brute Force&lt;/li&gt;
&lt;li&gt;Divide-and-Conquer&lt;/li&gt;
&lt;li&gt;Decrease-and-Conquer&lt;/li&gt;
&lt;li&gt;Transform-and-Conquer&lt;/li&gt;
&lt;li&gt;Space and Time Tradeoffs&lt;/li&gt;
&lt;li&gt;Dynamic Programming&lt;/li&gt;
&lt;li&gt;Greedy Technique&lt;/li&gt;
&lt;li&gt;Iterative Improvement&lt;/li&gt;
&lt;li&gt;Limitations of Algorithm Power&lt;/li&gt;
&lt;li&gt;Coping with the Limitations of Algorithm Power&lt;/li&gt;
&lt;li&gt;Useful Formulas for the Analysis of Algorithms&lt;/li&gt;
&lt;li&gt;Short Tutorial on Recurrence Relations&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>algorithms</category><category>bibliography</category><category>book</category><category>citation</category><guid>https://necromuralist.github.io/Bowling-For-Data/posts/itdaa/</guid><pubDate>Wed, 20 Oct 2021 23:24:56 GMT</pubDate></item><item><title>Essential Algorithms</title><link>https://necromuralist.github.io/Bowling-For-Data/posts/essential-algorithms/</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org37f5efd" class="outline-2"&gt;
&lt;h2 id="org37f5efd"&gt;Citation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org37f5efd"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Stephens R. Essential algorithms: a practical approach to computer algorithms using Python and C#. 2nd ed. Indianapolis: John Wiley; 2019.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>algorithms</category><category>bibliography</category><category>book</category><guid>https://necromuralist.github.io/Bowling-For-Data/posts/essential-algorithms/</guid><pubDate>Thu, 12 Aug 2021 19:39:58 GMT</pubDate></item><item><title>Introduction To Algorithms (CLRS)</title><link>https://necromuralist.github.io/Bowling-For-Data/posts/clrs/</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;div id="outline-container-org84fa408" class="outline-2"&gt;
&lt;h2 id="org84fa408"&gt;Chapters&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org84fa408"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org94b5a1d" class="outline-3"&gt;
&lt;h3 id="org94b5a1d"&gt;Foundations&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org94b5a1d"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc880227" class="outline-4"&gt;
&lt;h4 id="orgc880227"&gt;The Role of Algorithms in Computing&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgc880227"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Algorithms&lt;/li&gt;
&lt;li&gt;Algorithms as a technology&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb12dc60" class="outline-4"&gt;
&lt;h4 id="orgb12dc60"&gt;Getting Started&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgb12dc60"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Insertion Sort&lt;/li&gt;
&lt;li&gt;Analyzing algorithms&lt;/li&gt;
&lt;li&gt;Designing algorithms&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org021774e" class="outline-4"&gt;
&lt;h4 id="org021774e"&gt;Growth of Functions&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org021774e"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Asymptotic notation&lt;/li&gt;
&lt;li&gt;Standard notations and common functions&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4525b89" class="outline-4"&gt;
&lt;h4 id="org4525b89"&gt;Divide-and-Conquer&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org4525b89"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;The maximum-subarray problem&lt;/li&gt;
&lt;li&gt;Strassen's algorithm for matrix multiplication&lt;/li&gt;
&lt;li&gt;The substitution method for solving recurrences&lt;/li&gt;
&lt;li&gt;The recursion-tree method for solving recurrences&lt;/li&gt;
&lt;li&gt;The master method for solving recurrences&lt;/li&gt;
&lt;li&gt;Proof of the master theorem&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb80f07a" class="outline-4"&gt;
&lt;h4 id="orgb80f07a"&gt;Probabilistic Analysis and Randomization Algorithms&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgb80f07a"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;The hiring problem&lt;/li&gt;
&lt;li&gt;Indicator Random Variables&lt;/li&gt;
&lt;li&gt;Randomized Algorithms&lt;/li&gt;
&lt;li&gt;Probabilistic analysis and further uses of indicator random variables&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgebf00e9" class="outline-3"&gt;
&lt;h3 id="orgebf00e9"&gt;Sorting and Order Statistics&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgebf00e9"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org8d63445" class="outline-4"&gt;
&lt;h4 id="org8d63445"&gt;Heapsort&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org8d63445"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Heaps&lt;/li&gt;
&lt;li&gt;Maintaining the heap property&lt;/li&gt;
&lt;li&gt;Building a heap&lt;/li&gt;
&lt;li&gt;The heapsort algorithm&lt;/li&gt;
&lt;li&gt;Priority queues&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org12cc972" class="outline-4"&gt;
&lt;h4 id="org12cc972"&gt;Quicksort&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org12cc972"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Description of quicksort&lt;/li&gt;
&lt;li&gt;Performance of quicksort&lt;/li&gt;
&lt;li&gt;A randomized version of quicksort&lt;/li&gt;
&lt;li&gt;Analysis of quicksort&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org34a4e59" class="outline-4"&gt;
&lt;h4 id="org34a4e59"&gt;Sorting in Linear Time&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org34a4e59"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Lower bounds for sorting&lt;/li&gt;
&lt;li&gt;Counting sort&lt;/li&gt;
&lt;li&gt;Radix sort&lt;/li&gt;
&lt;li&gt;Bucket sort&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf2f9ab8" class="outline-4"&gt;
&lt;h4 id="orgf2f9ab8"&gt;Medians and Order Statistics&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgf2f9ab8"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Minimum and maximum&lt;/li&gt;
&lt;li&gt;Selection in expected linear time&lt;/li&gt;
&lt;li&gt;Selection in worst-case linear time&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org258aefc" class="outline-3"&gt;
&lt;h3 id="org258aefc"&gt;Data Structures&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org258aefc"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org75a630f" class="outline-4"&gt;
&lt;h4 id="org75a630f"&gt;Elementary Data Structures&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org75a630f"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Stacks and Queues&lt;/li&gt;
&lt;li&gt;Linked Lists&lt;/li&gt;
&lt;li&gt;Implementing pointers and objects&lt;/li&gt;
&lt;li&gt;Representing rooted trees&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgcd81442" class="outline-4"&gt;
&lt;h4 id="orgcd81442"&gt;Hash Tables&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgcd81442"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Direct-address tables&lt;/li&gt;
&lt;li&gt;Hash tables&lt;/li&gt;
&lt;li&gt;Hash functions&lt;/li&gt;
&lt;li&gt;Open addressing&lt;/li&gt;
&lt;li&gt;Perfect hashing&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org79b6aa6" class="outline-4"&gt;
&lt;h4 id="org79b6aa6"&gt;Binary Search Trees&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org79b6aa6"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;What is a binary search tree?&lt;/li&gt;
&lt;li&gt;Querying a binary search tree&lt;/li&gt;
&lt;li&gt;Insertion and deletion&lt;/li&gt;
&lt;li&gt;Randomly built binary search trees&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org069f287" class="outline-4"&gt;
&lt;h4 id="org069f287"&gt;Red-Black Trees&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org069f287"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Properties of red-black trees&lt;/li&gt;
&lt;li&gt;Rotations&lt;/li&gt;
&lt;li&gt;Insertion&lt;/li&gt;
&lt;li&gt;Deletion&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3422193" class="outline-4"&gt;
&lt;h4 id="org3422193"&gt;Augmenting Data Structures&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org3422193"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Dynamic order statistics&lt;/li&gt;
&lt;li&gt;How to augment a ddata structure&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org94cc8bd" class="outline-3"&gt;
&lt;h3 id="org94cc8bd"&gt;Advanced Design and Analysis Techniques&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org94cc8bd"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orged2cd80" class="outline-4"&gt;
&lt;h4 id="orged2cd80"&gt;Dynamic Programming&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orged2cd80"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Rod cutting&lt;/li&gt;
&lt;li&gt;Matrix-chain multiplication&lt;/li&gt;
&lt;li&gt;Elements of dynamic programming&lt;/li&gt;
&lt;li&gt;Longest common subsequence&lt;/li&gt;
&lt;li&gt;Optimal binary search trees&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9964e94" class="outline-4"&gt;
&lt;h4 id="org9964e94"&gt;Greedy Algorithms&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org9964e94"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;An activity-selection problem&lt;/li&gt;
&lt;li&gt;Elements of the greedy strategy&lt;/li&gt;
&lt;li&gt;Huffman codes&lt;/li&gt;
&lt;li&gt;Matroids and greedy methods&lt;/li&gt;
&lt;li&gt;A task-scheduling problem as a matroid&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge8bbd1e" class="outline-4"&gt;
&lt;h4 id="orge8bbd1e"&gt;Amortized Analysis&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orge8bbd1e"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Aggregate analysis&lt;/li&gt;
&lt;li&gt;The accounting method&lt;/li&gt;
&lt;li&gt;The potential method&lt;/li&gt;
&lt;li&gt;Dynamic tables&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga6d784e" class="outline-3"&gt;
&lt;h3 id="orga6d784e"&gt;Advanced Data Structures&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga6d784e"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge9d1c2a" class="outline-4"&gt;
&lt;h4 id="orge9d1c2a"&gt;B-Trees&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orge9d1c2a"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Definition of B-trees&lt;/li&gt;
&lt;li&gt;Basic operations on B-trees&lt;/li&gt;
&lt;li&gt;Deleting a key from a B-tree&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2d2671f" class="outline-4"&gt;
&lt;h4 id="org2d2671f"&gt;Fibonacci Heaps&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org2d2671f"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Structure of Fibonacci heaps&lt;/li&gt;
&lt;li&gt;Mergeable-heap operations&lt;/li&gt;
&lt;li&gt;Decreasing a key and deleting a node&lt;/li&gt;
&lt;li&gt;Bounding the maximum degree&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org528ac8b" class="outline-4"&gt;
&lt;h4 id="org528ac8b"&gt;van Emde Boas Trees&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org528ac8b"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Preliminary approaches&lt;/li&gt;
&lt;li&gt;A recursive structure&lt;/li&gt;
&lt;li&gt;The van Emde Boas Tree&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgcd50d29" class="outline-4"&gt;
&lt;h4 id="orgcd50d29"&gt;Data Structures for Disjoint Sets&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgcd50d29"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Disjoint-set operations&lt;/li&gt;
&lt;li&gt;Linked-list representations of disjoint sets&lt;/li&gt;
&lt;li&gt;Disjoint-set forests&lt;/li&gt;
&lt;li&gt;Analysis of uninon by rank with path compression&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf48be53" class="outline-3"&gt;
&lt;h3 id="orgf48be53"&gt;Graph Algorithms&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgf48be53"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf4f5c65" class="outline-4"&gt;
&lt;h4 id="orgf4f5c65"&gt;Elementary Graph Algorithms&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgf4f5c65"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Representations of graphs&lt;/li&gt;
&lt;li&gt;Breadth-first search&lt;/li&gt;
&lt;li&gt;Depth-first search&lt;/li&gt;
&lt;li&gt;Topological sort&lt;/li&gt;
&lt;li&gt;Strongly connected components&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org72a2864" class="outline-4"&gt;
&lt;h4 id="org72a2864"&gt;Minimum Spanning Trees&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org72a2864"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Growing a minimum spanning tree&lt;/li&gt;
&lt;li&gt;The algorithms of Kruskal and Prim&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgce0a92a" class="outline-4"&gt;
&lt;h4 id="orgce0a92a"&gt;Single-Source Shortest Paths&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgce0a92a"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;The Bellman-Ford algorithm&lt;/li&gt;
&lt;li&gt;Single-source shortest paths in directed acyclic graphs&lt;/li&gt;
&lt;li&gt;Dijkstra's algorithm&lt;/li&gt;
&lt;li&gt;Difference constraints and shortest paths&lt;/li&gt;
&lt;li&gt;Proofs of shortest-paths properties&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org8fcf357" class="outline-4"&gt;
&lt;h4 id="org8fcf357"&gt;All-Pairs Shortest Paths&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org8fcf357"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Shortest paths and matrix multiplication&lt;/li&gt;
&lt;li&gt;The Floyd-Warshall algorithm&lt;/li&gt;
&lt;li&gt;Johnson's algorithm for sparse graphs&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9bf9176" class="outline-4"&gt;
&lt;h4 id="org9bf9176"&gt;Maximum Flow&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org9bf9176"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Flow networks&lt;/li&gt;
&lt;li&gt;The Ford-Fulkerson method&lt;/li&gt;
&lt;li&gt;Maximum bipartite matching&lt;/li&gt;
&lt;li&gt;Push-relabel algorithms&lt;/li&gt;
&lt;li&gt;The relabel-to-front algorithm&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfc75bed" class="outline-3"&gt;
&lt;h3 id="orgfc75bed"&gt;Selected Topics&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgfc75bed"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org059079b" class="outline-4"&gt;
&lt;h4 id="org059079b"&gt;Multithreaded Algorithms&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org059079b"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;The basics of dynamic multithreading&lt;/li&gt;
&lt;li&gt;Multithreaded matrix multiplication&lt;/li&gt;
&lt;li&gt;Multithreaded merge sort&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf0c8b33" class="outline-4"&gt;
&lt;h4 id="orgf0c8b33"&gt;Matrix Operations&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgf0c8b33"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Solving systems of linear equations&lt;/li&gt;
&lt;li&gt;Inverting matrices&lt;/li&gt;
&lt;li&gt;Symmetric positive-definite matrices and least-squares approximation&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0647edc" class="outline-4"&gt;
&lt;h4 id="org0647edc"&gt;Linear Programming&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org0647edc"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Standard and slack forms&lt;/li&gt;
&lt;li&gt;Formulating problems as linear programs&lt;/li&gt;
&lt;li&gt;The simplex algorithm&lt;/li&gt;
&lt;li&gt;Duality&lt;/li&gt;
&lt;li&gt;The initial basic feasible solution&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd93246f" class="outline-4"&gt;
&lt;h4 id="orgd93246f"&gt;Polynomials and the FFT&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgd93246f"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Representing polynomials&lt;/li&gt;
&lt;li&gt;The DFT and FFT&lt;/li&gt;
&lt;li&gt;Efficient FFT Implementations&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9eb751b" class="outline-4"&gt;
&lt;h4 id="org9eb751b"&gt;Number-Theoretic Algorithms&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org9eb751b"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Elementary number-theoretic notions&lt;/li&gt;
&lt;li&gt;Greatest common divisor&lt;/li&gt;
&lt;li&gt;Modular arithmetic&lt;/li&gt;
&lt;li&gt;Solving modular linear equations&lt;/li&gt;
&lt;li&gt;The Chinese remainder theorem&lt;/li&gt;
&lt;li&gt;Powers of an element&lt;/li&gt;
&lt;li&gt;The RSA public-key cryptosystem&lt;/li&gt;
&lt;li&gt;Primality testing&lt;/li&gt;
&lt;li&gt;Integer factorization&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf01493d" class="outline-4"&gt;
&lt;h4 id="orgf01493d"&gt;String Matching&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgf01493d"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;The naive string-matching algorithm&lt;/li&gt;
&lt;li&gt;The Rabin-Karp algorithm&lt;/li&gt;
&lt;li&gt;String matching with finite automata&lt;/li&gt;
&lt;li&gt;The Knuth-Morris-Pratt algorithm&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org8fdd55d" class="outline-4"&gt;
&lt;h4 id="org8fdd55d"&gt;Computational Geometry&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org8fdd55d"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Line-segment properties&lt;/li&gt;
&lt;li&gt;Determining whether any pair of segments intersects&lt;/li&gt;
&lt;li&gt;Finding the convex hull&lt;/li&gt;
&lt;li&gt;Finding the closest pair of points&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org88f2747" class="outline-4"&gt;
&lt;h4 id="org88f2747"&gt;NP-Completeness&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org88f2747"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Polynomial time&lt;/li&gt;
&lt;li&gt;Polynomial-time verification&lt;/li&gt;
&lt;li&gt;NP-completeness and reducibility&lt;/li&gt;
&lt;li&gt;NP-completeness proofs&lt;/li&gt;
&lt;li&gt;NP-complete problems&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc4a8cdc" class="outline-4"&gt;
&lt;h4 id="orgc4a8cdc"&gt;Approximation Algorithms&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgc4a8cdc"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;The vertex-coverc problem&lt;/li&gt;
&lt;li&gt;The traveling-salesman problem&lt;/li&gt;
&lt;li&gt;The set-covering problem&lt;/li&gt;
&lt;li&gt;Randomization and linear programming&lt;/li&gt;
&lt;li&gt;The subset-sum problem&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgcff0fe2" class="outline-3"&gt;
&lt;h3 id="orgcff0fe2"&gt;Appendix: Mathematical Background&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgcff0fe2"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9a699c6" class="outline-4"&gt;
&lt;h4 id="org9a699c6"&gt;Summations&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org9a699c6"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Summation formulas and properties&lt;/li&gt;
&lt;li&gt;Bounding summations&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge3c13be" class="outline-4"&gt;
&lt;h4 id="orge3c13be"&gt;Sets, Etc.&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orge3c13be"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Sets&lt;/li&gt;
&lt;li&gt;Relations&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;Graphs&lt;/li&gt;
&lt;li&gt;Trees&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7065ff7" class="outline-4"&gt;
&lt;h4 id="org7065ff7"&gt;Counting and Probability&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org7065ff7"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Counting&lt;/li&gt;
&lt;li&gt;Probability&lt;/li&gt;
&lt;li&gt;Discrcete random variables&lt;/li&gt;
&lt;li&gt;The geometric and binomial distributions&lt;/li&gt;
&lt;li&gt;The tails of the binomial distribution&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3cb55b6" class="outline-4"&gt;
&lt;h4 id="org3cb55b6"&gt;Matrices&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org3cb55b6"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Matrices and matrix operations&lt;/li&gt;
&lt;li&gt;Basic matrix properties&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org327fedf" class="outline-2"&gt;
&lt;h2 id="org327fedf"&gt;Citation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org327fedf"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Cormen TH, editor. Introduction to algorithms. 3rd ed. Cambridge, Mass: MIT Press; 2009. 1292 p.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>algorithms</category><category>bibliography</category><category>book</category><guid>https://necromuralist.github.io/Bowling-For-Data/posts/clrs/</guid><pubDate>Thu, 12 Aug 2021 19:39:58 GMT</pubDate></item></channel></rss>