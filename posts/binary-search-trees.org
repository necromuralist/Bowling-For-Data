#+BEGIN_COMMENT
.. title: Binary Search Trees
.. slug: binary-search-trees
.. date: 2022-03-08 16:37:49 UTC-08:00
.. tags: data structures,binary search trees,algorithms
.. category: Data Structures
.. link: 
.. description: Describing Binary Search Trees
.. type: text

#+END_COMMENT
#+OPTIONS: ^:{}
#+TOC: headlines 3
* What is a Binary Search Tree?
Using {{% lancelot "CLRS" %}}clrs{{% /lancelot %}}:

- A Binary Search Tree is a linked structure of Nodes
- Each Node is an object
- Each node has a /Key/ (and /Data/) 
- Each Node has /Left/, /Right/, and /Parent/ attributes which point to the Left Child, Right-Child, and Parent of the Node.
- If a child is missing then it is set to /Nil/.
- The root Node is the only Node with a Parent set to /Nil/.

When describing Binary Search Trees I'll tend to refer to the Nodes but mean the Nodes' keys (e.g. to say a Node is less than another means its key is less than the other Node's).

* The Binary Search Tree Property
All the nodes in the left sub-tree of a node are less than or equal to the node and all the nodes in the right sub-tree of the node are greater than or equal to the node.

* The Posts

- {{% doc %}}binary-search-tree-node{{% /doc %}}
- {{% doc %}}binary-search-tree-node-insertion{{% /doc %}}
- {{% doc %}}binary-search-tree-in-order-traversal{{% /doc %}}
- {{% doc %}}binary-search-tree-queries{{% cdoc %}}
- {{% doc %}}binary-search-tree-randomized{{% /doc %}}
* Sources
- {{% doc %}}clrs{{% /doc %}}
